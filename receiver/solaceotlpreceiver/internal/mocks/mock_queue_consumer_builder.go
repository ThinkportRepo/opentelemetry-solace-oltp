// Code generated by MockGen. DO NOT EDIT.
// Source: receiver/solaceotlpreceiver/internal/mocks/queue_consumer_builder.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	message "solace.dev/go/messaging/pkg/solace/message"
	resource "solace.dev/go/messaging/pkg/solace/resource"
)

// MockQueueConsumerBuilder is a mock of QueueConsumerBuilder interface.
type MockQueueConsumerBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockQueueConsumerBuilderMockRecorder
}

// MockQueueConsumerBuilderMockRecorder is the mock recorder for MockQueueConsumerBuilder.
type MockQueueConsumerBuilderMockRecorder struct {
	mock *MockQueueConsumerBuilder
}

// NewMockQueueConsumerBuilder creates a new mock instance.
func NewMockQueueConsumerBuilder(ctrl *gomock.Controller) *MockQueueConsumerBuilder {
	mock := &MockQueueConsumerBuilder{ctrl: ctrl}
	mock.recorder = &MockQueueConsumerBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQueueConsumerBuilder) EXPECT() *MockQueueConsumerBuilderMockRecorder {
	return m.recorder
}

// Build mocks base method.
func (m *MockQueueConsumerBuilder) Build(queue resource.Queue) (QueueConsumer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", queue)
	ret0, _ := ret[0].(QueueConsumer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Build indicates an expected call of Build.
func (mr *MockQueueConsumerBuilderMockRecorder) Build(queue interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockQueueConsumerBuilder)(nil).Build), queue)
}

// WithMessageAutoAcknowledgement mocks base method.
func (m *MockQueueConsumerBuilder) WithMessageAutoAcknowledgement() QueueConsumerBuilder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithMessageAutoAcknowledgement")
	ret0, _ := ret[0].(QueueConsumerBuilder)
	return ret0
}

// WithMessageAutoAcknowledgement indicates an expected call of WithMessageAutoAcknowledgement.
func (mr *MockQueueConsumerBuilderMockRecorder) WithMessageAutoAcknowledgement() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithMessageAutoAcknowledgement", reflect.TypeOf((*MockQueueConsumerBuilder)(nil).WithMessageAutoAcknowledgement))
}

// WithMessageListener mocks base method.
func (m *MockQueueConsumerBuilder) WithMessageListener(listener func(message.InboundMessage)) QueueConsumerBuilder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithMessageListener", listener)
	ret0, _ := ret[0].(QueueConsumerBuilder)
	return ret0
}

// WithMessageListener indicates an expected call of WithMessageListener.
func (mr *MockQueueConsumerBuilderMockRecorder) WithMessageListener(listener interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithMessageListener", reflect.TypeOf((*MockQueueConsumerBuilder)(nil).WithMessageListener), listener)
}
