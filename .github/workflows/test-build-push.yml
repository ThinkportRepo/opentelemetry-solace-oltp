name: Test, Build and Push
description: Test, Build and Push Docker image to GitHub Container Registry

on:
  push:
    branches: [ '**' ]
    tags: [ 'v*' ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
          cache: true
      - name: Run unit tests
        run: |
          cd receiver/solaceotlpreceiver
          go test -v -coverprofile=coverage.out ./internal/receiver

  build-and-push-linux:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Sync tags
        run: |
          git fetch --tags --force
          git tag -l | xargs git tag -d
          git fetch --tags
      - name: Get latest tag
        id: get_tag
        run: |
          if git describe --tags --abbrev=0 2>/dev/null; then
            echo "tag=$(git describe --tags --abbrev=0 | sed 's/^v//')" >> $GITHUB_OUTPUT
          else
            echo "tag=dev" >> $GITHUB_OUTPUT
          fi
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'
          cache: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.get_tag.outputs.tag }}
            type=raw,value=latest
      - name: Build and push Docker image (multiarch)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: collector/Dockerfile
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: thinkportrepo/opentelemetry-solace-otlp
